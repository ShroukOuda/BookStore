@model IEnumerable<BookStore.ViewModels.Author.AuthorViewModel>

@{
    ViewData["Title"] = "Authors";
    var authorCount = Model?.Count() ?? 0;
}

<div class="container mt-4">
      <!-- Header Section -->
      <div class="row mb-4">
          <div class="col-12">
              <div class="card border-0 shadow-sm">
                  <div class="card-body py-3">
                      <div class="d-flex flex-column flex-lg-row justify-content-between align-items-center gap-3">
                          <div class="d-flex align-items-center">
                              <div class="bg-primary bg-gradient rounded-circle p-2 me-3">
                                  <i class="bi bi-collection text-white fs-4"></i>
                              </div>
                              <div class="text-center text-lg-start">
                                  <h1 class="mb-1 fw-bold text-dark">Authors Catalog</h1>
                                  <p class="text-muted mb-0">
                                      <i class="bi bi-info-circle me-1"></i>
                                      Manage and organize your book authors
                                      @if (authorCount > 0)
                                      {
                                          <span class="badge bg-primary-subtle text-primary ms-2">
                                              @authorCount Authors
                                          </span>
                                      }
                                  </p>
                              </div>
                          </div>
                          <div class="d-flex gap-2">
                              <a asp-action="Create" class="btn btn-success btn-lg rounded-pill shadow-sm d-inline-flex align-items-center gap-2 px-4 py-2">
                                  <i class="bi bi-plus-circle"></i>
                                  Add New Author
                              </a>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
      </div>
      
      <div id="messageContainer"></div>
      @if (authorCount == 0)
        {
            <!-- Empty State -->
            <div class="row">
                <div class="col-12">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body text-center py-5">
                            <div class="mb-4">
                                <div class="bg-light rounded-circle mx-auto d-inline-flex p-4">
                                    <i class="bi bi-collection text-muted" style="font-size: 4rem;"></i>
                                </div>
                            </div>
                            <h3 class="fw-bold text-dark mb-3">No Authors Yet</h3>
                            <p class="text-muted mb-4 lead">Get started by creating your first book author to organize your collection.</p>
                            <div class="d-flex flex-column flex-sm-row gap-3 justify-content-center">
                                <a asp-action="Create" class="btn btn-success btn-lg rounded-pill px-4">
                                    <i class="bi bi-plus-circle me-2"></i>
                                    Create Your First Author
                                </a>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
        }
      else
      {
              <!-- Search and Filter Bar -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="row g-3 align-items-center">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text bg-light border-end-0">
                                    <i class="bi bi-search text-muted"></i>
                                </span>
                                <input type="text" class="form-control border-start-0 ps-0"
                                       placeholder="Search authors..." id="authorSearch">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex gap-2 flex-wrap">
                                <button class="btn btn-outline-primary btn-sm" onclick="sortAuthors('name')">
                                    <i class="bi bi-sort-alpha-down me-1"></i>
                                    Sort A-Z
                                </button>
                                <button class="btn btn-outline-primary btn-sm" onclick="sortAuthors('date')">
                                    <i class="bi bi-sort-numeric-down me-1"></i>
                                    Sort by Date
                                </button>
                                <button class="btn btn-outline-primary btn-sm" onclick="sortAuthors('bookcount')">
                                    <i class="bi bi-sort-numeric-down me-1"></i>
                                    Sort by Books
                                </button>
                                <div class="btn-group ms-auto">
                                    <button class="btn btn-outline-secondary btn-sm active" id="gridViewBtn">
                                        <i class="bi bi-grid"></i>
                                    </button>
                                    <button class="btn btn-outline-secondary btn-sm" id="listViewBtn">
                                        <i class="bi bi-list"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Authors Grid View -->
    <div class="row g-4" id="authorsContainer">
        @foreach (var author in Model)
        {
            <div class="col-12 col-md-6 col-lg-4 author-card"
                 data-author-name="@author.Name"
                 data-author-date="@author.CreatedAt.ToString("yyyy-MM-dd")"
                 data-author-bookcount="@author.BookCount">
                <div class="card h-100 border-0 shadow-sm hover-shadow transition-all">
                    <div class="card-body d-flex flex-column">
                        <div class="d-flex align-items-center mb-3">
                            <div class="rounded-circle bg-primary bg-opacity-10 p-3 me-3">
                                <i class="bi bi-person fs-4 text-primary"></i>
                            </div>
                            <div>
                                <h5 class="card-title mb-1">@author.Name</h5>
                                <small class="text-muted">Author</small>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(author.Biography))
                        {
                            <p class="card-text text-muted small mb-3">
                                @author.Biography
                            </p>
                        }

                        <div class="border-top pt-3 mt-auto">
                            <div class="row g-2 text-muted small">
                                <div class="col-6">
                                    <i class="bi bi-calendar-plus me-1"></i>
                                    <strong>Created:</strong><br>
                                    @author.CreatedAt.ToString("MMM dd, yyyy")
                                </div>
                                <div class="col-6">
                                    <i class="bi bi-calendar-plus me-1"></i>
                                    <strong>Updated:</strong><br>
                                    @author.UpdatedAt.ToString("MMM dd, yyyy")
                                </div>
                                <div class="col-6">
                                    <i class="bi bi-book me-1"></i>
                                    <strong>Books:</strong><br>
                                    @author.BookCount
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent border-0 d-flex justify-content-end gap-2">
                        <a asp-action="Update" asp-route-id="@author.Id"
                           class="btn btn-sm btn-outline-warning">
                            <i class="bi bi-pencil"></i> Update
                        </a>

                      <button class="btn btn-outline-danger btn-sm" title="Delete Category"
                                onclick="deleteAuthor(@author.Id, '@author.Name')">
                          <i class="bi bi-trash"></i> Delete
                          </button>
                        <a asp-controller="Books" asp-action="Index" asp-route-AuthorId="@author.Id"
                           class="btn btn-primary btn-sm flex-fill">
                            <i class="bi bi-book me-1"></i>
                            Books
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>

 <!-- Authors List View (Hidden by default) -->
<div class="d-none" id="authorsListView">
    <div class="card border-0 shadow-sm">
        <div class="table-responsive">
            <table class="table table-hover mb-0">
                <thead class="bg-light">
                    <tr>
                        <th class="fw-semibold text-dark border-0 py-3">
                            <i class="bi bi-person me-1"></i>
                            Author
                        </th>
                        <th class="fw-semibold text-dark border-0 py-3">
                            <i class="bi bi-chat-text me-1"></i>
                            Biography
                        </th>
                        <th class="fw-semibold text-dark border-0 py-3 text-center">
                            <i class="bi bi-book me-1"></i>
                            Books
                        </th>
                        <th class="fw-semibold text-dark border-0 py-3">
                            <i class="bi bi-calendar me-1"></i>
                            Created
                        </th>
                        <th class="fw-semibold text-dark border-0 py-3 text-center">
                            <i class="bi bi-gear me-1"></i>
                            Actions
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var author in Model)
                    {
                        <tr class="author-row"
                            data-author-name="@author.Name.ToLower()"
                            data-author-date="@author.CreatedAt.ToString("yyyy-MM-dd")"
                            data-author-bookcount="@author.BookCount">
                            <td class="py-3">
                                <div class="d-flex align-items-center">
                                    <div class="bg-primary bg-gradient rounded-circle p-1 me-2">
                                        <i class="bi bi-person text-white small"></i>
                                    </div>
                                    <div>
                                        <div class="fw-semibold text-dark">@author.Name</div>
                                    </div>
                                </div>
                            </td>
                            <td class="py-3">
                                <span class="text-muted small">
                                    @(!string.IsNullOrEmpty(author.Biography) ? 
                                        (author.Biography.Length > 60 ? author.Biography.Substring(0, 60) + "..." : author.Biography) 
                                        : "No biography")
                                </span>
                            </td>
                            <td class="py-3 text-center">
                                <span class="badge bg-primary">@author.BookCount</span>
                            </td>
                            <td class="py-3">
                                <span class="text-muted small">@author.CreatedAt.ToString("MMM dd, yyyy")</span>
                            </td>
                            <td class="py-3 text-center">
                                <div class="btn-group" role="group">
                                    <a asp-controller="Books" asp-action="Index" asp-route-AuthorId="@author.Id"
                                       class="btn btn-outline-primary btn-sm" title="View Books">
                                        <i class="bi bi-book"></i>
                                    </a>
                                    <a asp-action="Update" asp-route-id="@author.Id"
                                       class="btn btn-outline-warning btn-sm" title="Edit Author">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <button class="btn btn-outline-danger btn-sm" title="Delete Author"
                                            onclick="deleteAuthor(@author.Id, '@author.Name')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

      }


</div>
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white border-0">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    Confirm Author Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-3">
                    <i class="bi bi-trash text-danger" style="font-size: 3rem;"></i>
                </div>
                <h6 class="text-center mb-3">Are you sure you want to delete this author?</h6>
                <div class="alert alert-warning border-0">
                    <strong>Author:</strong> <span id="deleteAuthorName"></span><br>
                    <small class="text-muted">
                        <i class="bi bi-info-circle me-1"></i>
                        This action cannot be undone. Any books linked to this author will remain in the system but will no longer show this author.
                    </small>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i>
                    Cancel
                </button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="bi bi-trash me-1"></i>
                    Delete Author
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // 🔍 Search Authors
        const authorSearch = document.getElementById('authorSearch');
        if (authorSearch) {
            authorSearch.addEventListener('input', function () {
                const search = this.value.toLowerCase();
                document.querySelectorAll('.author-card, #authorsListView tbody tr').forEach(item => {
                    const name = (item.getAttribute('data-author-name') || '').toLowerCase();
                    item.style.display = name.includes(search) ? '' : 'none';
                });
            });
        }

        // ↕️ Sort Authors
        window.sortAuthors = function (sortBy) {
            const container = document.getElementById('authorsContainer');
            const listBody = document.querySelector('#authorsListView tbody');

            if (!container || !listBody) return;

            const cards = Array.from(container.querySelectorAll('.author-card'));
            const rows = Array.from(listBody.querySelectorAll('tr'));

            function getAttr(el, name) {
                return el.getAttribute('data-author-' + name) || '';
            }

            function compare(a, b) {
                if (sortBy === 'name') {
                    return getAttr(a, 'name').localeCompare(getAttr(b, 'name'), undefined, { sensitivity: 'base' });
                }
                if (sortBy === 'date') {
                    return new Date(getAttr(b, 'date')) - new Date(getAttr(a, 'date'));
                }
                if (sortBy === 'bookcount') {
                    return (parseInt(getAttr(b, 'bookcount'), 10) || 0) -
                           (parseInt(getAttr(a, 'bookcount'), 10) || 0);
                }
                return 0;
            }

            cards.sort(compare);
            rows.sort(compare);

            container.innerHTML = '';
            cards.forEach(card => container.appendChild(card));

            listBody.innerHTML = '';
            rows.forEach(row => listBody.appendChild(row));
        };

        // 📑 Toggle Grid/List View
        const gridViewBtn = document.getElementById('gridViewBtn');
        const listViewBtn = document.getElementById('listViewBtn');
        const gridView = document.getElementById('authorsContainer');
        const listView = document.getElementById('authorsListView');

        if (gridViewBtn && listViewBtn && gridView && listView) {
            gridViewBtn.addEventListener('click', () => {
                gridView.classList.remove('d-none');
                listView.classList.add('d-none');
                gridViewBtn.classList.add('active');
                listViewBtn.classList.remove('active');
            });

            listViewBtn.addEventListener('click', () => {
                gridView.classList.add('d-none');
                listView.classList.remove('d-none');
                listViewBtn.classList.add('active');
                gridViewBtn.classList.remove('active');
            });
        }
        
        //delete author
        window.deleteAuthor = function(authorId, authorName) {
            const deleteNameElem = document.getElementById('deleteAuthorName');
            const deleteModalElem = document.getElementById('deleteModal');
            const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            const messageContainer = document.getElementById('messageContainer');

            deleteNameElem.textContent = authorName;
            const modal = new bootstrap.Modal(deleteModalElem);
            modal.show();

            confirmDeleteBtn.onclick = function() {
                fetch(`/Authors/Delete/${authorId}`, {
                    method: 'DELETE',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                })
                    .then(response => response.text().then(msg => ({ ok: response.ok, msg })))
                    .then(({ ok, msg }) => {
                        if (ok) {
                            modal.hide();
                            if (messageContainer) {
                                messageContainer.innerHTML = `<div class="alert alert-success alert-dismissible fade show" role="alert">
                        Author "${authorName}" has been deleted successfully.
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>`;
                            }
                            const row = document.querySelector(`tr[data-author-id="${authorId}"]`);
                            if (row) row.remove();
                        } else {
                            alert(msg || 'Cannot delete author. Please check for related books.');
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        alert('An error occurred while deleting the author.');
                    });
            };
        };

    });
</script>
}

