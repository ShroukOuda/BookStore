@model IEnumerable<CategoryViewModel>
@{
    ViewData["Title"] = "Categories";
    var categoryCount = Model?.Count() ?? 0;
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex flex-column flex-lg-row justify-content-between align-items-center gap-3">
                        <div class="d-flex align-items-center">
                            <div class="bg-primary bg-gradient rounded-circle p-2 me-3">
                                <i class="bi bi-collection text-white fs-4"></i>
                            </div>
                            <div class="text-center text-lg-start">
                                <h1 class="mb-1 fw-bold text-dark">Categories Catalog</h1>
                                <p class="text-muted mb-0">
                                    <i class="bi bi-info-circle me-1"></i>
                                    Manage and organize your book categories
                                    @if (categoryCount > 0)
                                    {
                                        <span class="badge bg-primary-subtle text-primary ms-2">
                                            @categoryCount Categories
                                        </span>
                                    }
                                </p>
                            </div>
                        </div>
                        <div class="d-flex gap-2">
                            <a asp-action="Create" class="btn btn-success btn-lg rounded-pill shadow-sm d-inline-flex align-items-center gap-2 px-4 py-2">
                                <i class="bi bi-plus-circle"></i>
                                Add New Category
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="messageContainer"></div>
    @if (categoryCount == 0)
    {
        <!-- Empty State -->
        <div class="row">
            <div class="col-12">
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center py-5">
                        <div class="mb-4">
                            <div class="bg-light rounded-circle mx-auto d-inline-flex p-4">
                                <i class="bi bi-collection text-muted" style="font-size: 4rem;"></i>
                            </div>
                        </div>
                        <h3 class="fw-bold text-dark mb-3">No Categories Yet</h3>
                        <p class="text-muted mb-4 lead">Get started by creating your first book category to organize your collection.</p>
                        <div class="d-flex flex-column flex-sm-row gap-3 justify-content-center">
                            <a asp-action="Create" class="btn btn-success btn-lg rounded-pill px-4">
                                <i class="bi bi-plus-circle me-2"></i>
                                Create Your First Category
                            </a>
                        </div>
                  
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Search and Filter Bar -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card border-0 shadow-sm">
                    <div class="card-body py-3">
                        <div class="row g-3 align-items-center">
                            <div class="col-md-6">
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="bi bi-search text-muted"></i>
                                    </span>
                                    <input type="text" class="form-control border-start-0 ps-0" 
                                           placeholder="Search categories..." id="categorySearch">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="d-flex gap-2 flex-wrap">
                                    <button class="btn btn-outline-primary btn-sm" onclick="sortCategories('name')">
                                        <i class="bi bi-sort-alpha-down me-1"></i>
                                        Sort A-Z
                                    </button>
                                    <button class="btn btn-outline-primary btn-sm" onclick="sortCategories('date')">
                                        <i class="bi bi-sort-numeric-down me-1"></i>
                                        Sort by Date
                                    </button>
                                    <button class="btn btn-outline-primary btn-sm" onclick="sortCategories('bookcount')">
                                        <i class="bi bi-sort-numeric-down me-1"></i>
                                        Sort by Books
                                    </button>
                                    <div class="btn-group ms-auto">
                                        <button class="btn btn-outline-secondary btn-sm active" id="gridViewBtn">
                                            <i class="bi bi-grid"></i>
                                        </button>
                                        <button class="btn btn-outline-secondary btn-sm" id="listViewBtn">
                                            <i class="bi bi-list"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Categories Grid -->
        <div class="row g-4" id="categoriesContainer">
            @foreach (var category in Model)
            {
                <div class="col-12 col-md-6 col-lg-4 category-card" 
                     data-category-name="@category.Name.ToLower()" 
                     data-category-date="@category.CreatedAt.ToString("yyyy-MM-dd")"
                     data-category-bookcount="@category.BookCount">
                    <div class="card border-0 shadow-sm h-100 category-item">
                        <div class="card-header bg-light border-0 py-3">
                            <div class="d-flex align-items-center justify-content-between">
                                <div class="d-flex align-items-center">
                                    <div class="bg-primary bg-gradient rounded-circle p-2 me-2">
                                        <i class="bi bi-tag text-white"></i>
                                    </div>
                                    <h5 class="mb-0 fw-semibold text-dark">@category.Name</h5>
                                </div>
                            </div>
                        </div>
                        <div class="card-body p-4">
                            <div class="mb-3">
                                <p class="text-muted mb-3">
                                    @(!string.IsNullOrEmpty(category.Description) ? category.Description : "No description available for this category.")
                                </p>
                            </div>
                            
                            <div class="border-top pt-3 mt-auto">
                                <div class="row g-2 text-muted small">
                                    <div class="col-6">
                                        <i class="bi bi-calendar-plus me-1"></i>
                                        <strong>Created:</strong><br>
                                        @category.CreatedAt.ToString("MMM dd, yyyy")
                                    </div>
                                    <div class="col-6">
                                        <i class="bi bi-calendar-plus me-1"></i>
                                        <strong>Updated:</strong><br>
                                        @category.UpdatedAt.ToString("MMM dd, yyyy")
                                    </div>
                                    <div class="col-6">
                                        <i class="bi bi-book me-1"></i>
                                        <strong>Books:</strong><br>
                                        @category.BookCount
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-0 pt-0 pb-3 px-4">
                            <div class="d-flex gap-2">
                                <a asp-action="Update" asp-route-id="@category.Id"
                                   class="btn btn-sm btn-outline-warning">
                                    <i class="bi bi-pencil"></i> Update
                                </a>
                              
                                <button class="btn btn-outline-danger btn-sm" title="Delete Category"
                                        onclick="deleteCategory(@category.Id, '@category.Name')">
                                    <i class="bi bi-trash"></i> Delete
                                </button>
                                <a asp-controller="Books" asp-action="Index" asp-route-CategoryId="@category.Id" 
                                   class="btn btn-primary btn-sm flex-fill">
                                    <i class="bi bi-book me-1"></i>
                                    Books
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- List View (Hidden by default) -->
        <div class="d-none" id="listViewContainer">
            <div class="card border-0 shadow-sm">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="bg-light">
                            <tr>
                                <th class="fw-semibold text-dark border-0 py-3">
                                    <i class="bi bi-tag me-1"></i>
                                    Category
                                </th>
                                <th class="fw-semibold text-dark border-0 py-3">
                                    <i class="bi bi-chat-text me-1"></i>
                                    Description
                                </th>
                                <th class="fw-semibold text-dark border-0 py-3 text-center">
                                    <i class="bi bi-book me-1"></i>
                                    Books
                                </th>
                                <th class="fw-semibold text-dark border-0 py-3">
                                    <i class="bi bi-calendar me-1"></i>
                                    Created
                                </th>
                                <th class="fw-semibold text-dark border-0 py-3 text-center">
                                    <i class="bi bi-gear me-1"></i>
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in Model)
                            {
                                <tr class="category-row"
                                    data-category-name="@category.Name.ToLower()"
                                    data-category-date="@category.CreatedAt.ToString("yyyy-MM-dd")"
                                    data-category-bookcount="@category.BookCount">
                                    <td class="py-3">
                                        <div class="d-flex align-items-center">
                                            <div class="bg-primary bg-gradient rounded-circle p-1 me-2">
                                                <i class="bi bi-tag text-white small"></i>
                                            </div>
                                            <div>
                                                <div class="fw-semibold text-dark">@category.Name</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="py-3">
                                        <span class="text-muted">
                                            @(!string.IsNullOrEmpty(category.Description) ? (category.Description.Length > 60 ? category.Description.Substring(0, 60) + "..." : category.Description) : "No description")
                                        </span>
                                    </td>
                                    <td class="py-3 text-center">
                                        <span class="badge bg-primary">@category.BookCount</span>
                                    </td>
                                    <td class="py-3">
                                        <span class="text-muted small">@category.CreatedAt.ToString("MMM dd, yyyy")</span>
                                    </td>
                                    <td class="py-3 text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-controller="Books" asp-action="Index" asp-route-CategoryId="@category.Id" 
                                               class="btn btn-outline-primary btn-sm" title="View Books">
                                                <i class="bi bi-book"></i>
                                            </a>
                                            <a asp-action="Update" asp-route-id="@category.Id" 
                                               class="btn btn-outline-warning btn-sm" title="Edit Category">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button class="btn btn-outline-danger btn-sm" title="Delete Category"
                                                    onclick="deleteCategory(@category.Id, '@category.Name')">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div> 
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white border-0">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-3">
                    <i class="bi bi-trash text-danger" style="font-size: 3rem;"></i>
                </div>
                <h6 class="text-center mb-3">Are you sure you want to delete this category?</h6>
                <div class="alert alert-warning border-0">
                    <strong>Category:</strong> <span id="deleteCategoryName"></span><br>
                    <small class="text-muted">
                        <i class="bi bi-info-circle me-1"></i>
                        This action cannot be undone. Associated books will need to be reassigned to other categories.
                    </small>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i>
                    Cancel
                </button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="bi bi-trash me-1"></i>
                    Delete Category
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Toggle Grid/List View
            const gridViewBtn = document.getElementById('gridViewBtn');
            const listViewBtn = document.getElementById('listViewBtn');
            const gridView = document.getElementById('categoriesContainer');
            const listView = document.getElementById('listViewContainer');

            if (gridViewBtn && listViewBtn && gridView && listView) {
                gridViewBtn.addEventListener('click', () => {
                    gridView.classList.remove('d-none');
                    listView.classList.add('d-none');
                    gridViewBtn.classList.add('active');
                    listViewBtn.classList.remove('active');
                });

                listViewBtn.addEventListener('click', () => {
                    gridView.classList.add('d-none');
                    listView.classList.remove('d-none');
                    listViewBtn.classList.add('active');
                    gridViewBtn.classList.remove('active');
                });
            }

            // Search functionality
            const searchInput = document.getElementById('categorySearch');
            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase();
                    const categoryCards = document.querySelectorAll('.category-card');
                    const categoryRows = document.querySelectorAll('.category-row');
                    
                    categoryCards.forEach(card => {
                        const categoryName = card.getAttribute('data-category-name');
                        card.style.display = categoryName.includes(searchTerm) ? 'block' : 'none';
                    });
                    
                    categoryRows.forEach(row => {
                        const categoryName = row.getAttribute('data-category-name');
                        row.style.display = categoryName.includes(searchTerm) ? 'table-row' : 'none';
                    });
                });
            }
            
            // Sort functionality (Grid + List)
            window.sortCategories = function(sortBy) {
                const gridContainer = document.getElementById('categoriesContainer');
                const listTbody = document.querySelector('#listViewContainer tbody');

                const cards = gridContainer ? Array.from(gridContainer.querySelectorAll('.category-card')) : [];
                const rows = listTbody ? Array.from(listTbody.querySelectorAll('.category-row')) : [];

                function getAttr(el, name) {
                    return el.getAttribute('data-category-' + name) ?? '';
                }

                function compare(a, b) {
                    if (sortBy === 'name') {
                        return getAttr(a, 'name').localeCompare(getAttr(b, 'name'), undefined, { sensitivity: 'base' });
                    }
                    if (sortBy === 'date') {
                        return new Date(getAttr(b, 'date')) - new Date(getAttr(a, 'date'));
                    }
                    if (sortBy === 'bookcount') {
                        return (parseInt(getAttr(b, 'bookcount'), 10) || 0) -
                               (parseInt(getAttr(a, 'bookcount'), 10) || 0);
                    }
                    return 0;
                }

                cards.sort(compare);
                rows.sort(compare);

                if (gridContainer) {
                    gridContainer.innerHTML = '';
                    cards.forEach(card => gridContainer.appendChild(card));
                }

                if (listTbody) {
                    listTbody.innerHTML = '';
                    rows.forEach(row => listTbody.appendChild(row));
                }
            };

            // Delete category functionality
            window.deleteCategory = function(categoryId, categoryName) {
                const deleteNameElem = document.getElementById('deleteCategoryName');
                const deleteModalElem = document.getElementById('deleteModal');
                const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
                const messageContainer = document.getElementById('messageContainer');

                deleteNameElem.textContent = categoryName;
                const modal = new bootstrap.Modal(deleteModalElem);
                modal.show();

                confirmDeleteBtn.onclick = function() {
                    fetch(`/Categories/Delete/${categoryId}`, {
                        method: 'DELETE',
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                        }
                    })
                        .then(response => response.text().then(msg => ({ ok: response.ok, msg })))
                        .then(({ ok, msg }) => {
                            if (ok) {
                                modal.hide();
                                if (messageContainer) {
                                    messageContainer.innerHTML = `<div class="alert alert-success alert-dismissible fade show" role="alert">
                        Category "${categoryName}" has been deleted successfully.
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>`;
                                }
                                const row = document.querySelector(`tr[data-category-id="${categoryId}"]`);
                                if (row) row.remove();
                            } else {
                                alert(msg || 'Cannot delete category. Please check for related books.');
                            }
                        })
                        .catch(err => {
                            console.error(err);
                            alert('An error occurred while deleting the category.');
                        });
                };
            };


        });
    </script>
}
